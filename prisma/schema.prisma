generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Patient {
  id                 String         @id @default(uuid())
  createdAt          DateTime       @default(now())
  firstName          String
  lastName           String
  email              String         @unique
  password           String
  patientId          String         @unique
  dateOfBirth        DateTime?
  city               String?
  state              String?
  pinCode            Int?
  contactName        String?
  contactNumber      String?
  phoneNumber        String?
  streetAddress      String?
  bloodType          String?
  allergies          String?
  medicalConditions  String?
  currentMedications String?
  currentPassword    String?
  age                Int?
  role               String
  appointments       Appointment[]
  prescriptions      Prescription[]
}

model Doctor {
  id             String         @id @default(uuid())
  createdAt      DateTime       @default(now())
  firstName      String
  lastName       String
  age            Int?
  licenseNumber  String?
  qualifications String?
  experiences    String?
  specialization String?
  email          String         @unique
  password       String
  role           String
  description    String?
  appointments   Appointment[]
  prescriptions  Prescription[]
}

model Medical {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  shopName    String
  email       String   @unique
  password    String
  phoneNumber String?
  address     String
  role        String
}

model Appointment {
  id              String   @id @default(uuid())
  date            DateTime
  reason          String?
  appointmentType String
  status          String   @default("Scheduled")
  patientId       String
  doctorId        String
  patient         Patient  @relation(fields: [patientId], references: [id])
  doctor          Doctor   @relation(fields: [doctorId], references: [id])
}

model Prescription {
  id             String   @id @default(uuid())
  prescriptionId String   @unique
  createdAt      DateTime @default(now())
  medicine       String
  dosage         String
  frequency      String
  startDate      DateTime
  endDate        DateTime
  patientId      String
  doctorId       String
  patient        Patient  @relation(fields: [patientId], references: [id])
  doctor         Doctor   @relation(fields: [doctorId], references: [id])
}
